/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 *
 */

plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'maven-publish'
    id 'com.jfrog.bintray'
}


android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        versionCode rootProject.ext.screenManagerDMVersionCode
        versionName rootProject.ext.screenManagerDMVersionName

        testInstrumentationRunner rootProject.ext.config.testInstrumentationRunner
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }
}

dependencies {
    api project(path: ':screenmanager:core')

    implementation kotlinDependencies.kotlinStdlib
    implementation androidxDependencies.ktxCore

    testImplementation testDependencies.junit
    androidTestImplementation instrumentationTestDependencies.junit
    androidTestImplementation instrumentationTestDependencies.espressoCore
}

// ---- Artifact publication -----
task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}

afterEvaluate {
    publishing {
        publications {
            MicrosoftSurfaceDuo(MavenPublication) {
                from components.release
                groupId 'com.microsoft.device.dualscreen'
                artifactId 'screenmanager-displaymask'
                version android.defaultConfig.versionName
                artifact(sourceJar)
            }
        }

        //Private: This is used to upload the artifact to internal repository for testing purposes
        //You can use it by doing: ./gradlew :module:publishMicrosoftSurfaceDuoPublicationToADORepository
        //being :module the specific module you want to create the artifact from
        repositories {
            maven {
                name 'ADO'
                url getPropertyValue("ADO_URL")
                credentials {
                    username getPropertyValue("ADO_USER")
                    password getPropertyValue("ADO_PASSWD")
                }
            }
        }
    }
}

//Public: This is used to upload the artifact to Bintray/JCenter
//You can use it by doing: ./gradlew :module:bintrayUpload
//being :module the specific module you want to create the artifact from
bintray {
    user = getPropertyValue("BINTRAY_USER")
    key = getPropertyValue("BINTRAY_KEY")
    publications = ['MicrosoftSurfaceDuo']
    publish = false
    pkg {
        repo = 'screenmanager'
        name = 'displaymask'
        userOrg = getPropertyValue("BINTRAY_ORG")
        licenses = ['MIT']
        version {
            name = android.defaultConfig.versionName
            vcsTag = android.defaultConfig.versionName
        }
    }
}